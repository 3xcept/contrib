// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (t *Todo) ResolveParent(ctx context.Context) (*Todo, error) {
	parent, err := t.Edges.ParentOrErr()
	if IsNotLoaded(err) {
		parent, err = t.QueryParent().Only(ctx)
	}
	return parent, MaskNotFound(err)
}

func (t *Todo) ResolveChildren(ctx context.Context) ([]*Todo, error) {
	children, err := t.Edges.ChildrenOrErr()
	if IsNotLoaded(err) {
		children, err = t.QueryChildren().All(ctx)
	}
	return children, err
}
